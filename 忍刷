local success, redzlib = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()
end)
if not success then
    warn("无法加载 RedzLib: " .. redzlib)
    return
end

local CoreGui = game:GetService("StarterGui")
local plrs = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local vu = game:GetService("VirtualUser")

pcall(function()
    CoreGui:SetCore("SendNotification", {
        Title = "忍者刷人头",
        Text = "JsYb制作🤓(另外说一下有反挂机几乎不需要连点器)",
        Duration = 6,
    })
    CoreGui:SetCore("SendNotification", {
        Title = "忍者刷人头",
        Text = "更新时间：2025年3月28日",
        Duration = 10,
    })
end)

plrs.LocalPlayer.Idled:Connect(function()
    pcall(function()
        vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
        task.wait(1)
        vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
    end)
end)

local Window = redzlib:MakeWindow({
    Title = "忍者刷人头",
    SubTitle = "由 JsYb 制作",
    SaveFolder = "ninja_config.lua"
})

Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://7734068321", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(35, 1) },
})

local Tab = Window:MakeTab({"功能", "rbxassetid://7734068321"})

local function getRootPart(player)
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        repeat
            task.wait(0.5)
            character = player.Character
        until character and character:FindFirstChild("HumanoidRootPart")
    end
    return character.HumanoidRootPart
end

local teleportLoop
Tab:AddToggle({
    Name = "自动传送至山丘（每5秒）",
    Default = false,
    Callback = function(state)
        if state then
            teleportLoop = task.spawn(function()
                while task.wait(5) do
                    pcall(function()
                        local rootPart = getRootPart(plrs.LocalPlayer)
                        rootPart.CFrame = CFrame.new(235.66, 89.40, -287.68)
                    end)
                end
            end)
        else
            if teleportLoop then
                task.cancel(teleportLoop)
                teleportLoop = nil
            end
        end
    end
})

Tab:AddButton({
    Name = "飞行",
    Callback = function()
        pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/8848870620/666/refs/heads/main/%E9%A3%9E%E8%A1%8C", true))()
        end)
    end
})

Tab:AddToggle({
    Name = "快速手里剑",
    Default = false,
    Callback = function(state)
        local running = state
        task.spawn(function()
            while running and task.wait(0.1) do
                pcall(function()
                    local player = plrs.LocalPlayer
                    local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                    if rootPart then
                        local mouse = player:GetMouse()
                        local velocity = 1000
                        for _, p in pairs(workspace.shurikensFolder:GetChildren()) do
                            if p.Name == "Handle" and p:FindFirstChild("BodyVelocity") then
                                p.BodyVelocity.Velocity = mouse.Hit.lookVector * velocity
                            end
                        end
                    end
                end)
            end
        end)
    end
})

Tab:AddToggle({
    Name = "自动挥刀",
    Default = false,
    Callback = function(state)
        local running = state
        task.spawn(function()
            while running and task.wait(0.1) do
                pcall(function()
                    local character = plrs.LocalPlayer.Character
                    if character and character:FindFirstChild("Humanoid") then
                        if character:FindFirstChildOfClass("Tool") then
                            plrs.LocalPlayer.ninjaEvent:FireServer("swingKatana")
                        else
                            for _, v in pairs(plrs.LocalPlayer.Backpack:GetChildren()) do
                                if v:IsA("Tool") then
                                    character.Humanoid:EquipTool(v)
                                    break
                                end
                            end
                        end
                    end
                end)
            end
        end)
    end
})

local modifyConnection
Tab:AddTextBox({
    Name = "范围修改（透明）",
    Description = "输入范围大小",
    PlaceholderText = "默认 1",
    Callback = function(value)
        if modifyConnection then
            modifyConnection:Disconnect()
            modifyConnection = nil
        end
        local headSize = tonumber(value) or 1
        local function modifyPlayers()
            for _, v in pairs(plrs:GetPlayers()) do
                if v ~= plrs.LocalPlayer then
                    pcall(function()
                        local rootPart = v.Character and v.Character:FindFirstChild("HumanoidRootPart")
                        if rootPart then
                            rootPart.Size = Vector3.new(headSize, headSize, headSize)
                            rootPart.Transparency = 1
                            rootPart.BrickColor = BrickColor.new("Really blue")
                            rootPart.Material = "Neon"
                            rootPart.CanCollide = false
                        end
                    end)
                end
            end
        end
        modifyConnection = RunService.RenderStepped:Connect(modifyPlayers)
    end
})

local tpCoroutine, currentTPTarget, characterAlive = nil, nil, true
local function updatePlayerList()
    local newList = {"关闭传送"}
    for _, player in pairs(plrs:GetPlayers()) do
        if player ~= plrs.LocalPlayer then
            table.insert(newList, player.Name)
        end
    end
    return newList
end

local function startTeleportation(targetName)
    if tpCoroutine then
        task.cancel(tpCoroutine)
        tpCoroutine = nil
    end
    currentTPTarget = targetName ~= "关闭传送" and plrs:FindFirstChild(targetName) or nil
    if currentTPTarget then
        tpCoroutine = task.spawn(function()
            while currentTPTarget and task.wait(0.1) do
                pcall(function()
                    if not characterAlive then
                        repeat task.wait(0.5) until characterAlive
                    end
                    local targetRoot = currentTPTarget.Character and currentTPTarget.Character:FindFirstChild("HumanoidRootPart")
                    local localRoot = getRootPart(plrs.LocalPlayer)
                    if targetRoot then
                        localRoot.CFrame = CFrame.new(targetRoot.Position)
                    end
                end)
            end
        end)
    end
end

local dropdown = Tab:AddDropdown({
    Name = "持续传送玩家（死亡自动恢复）",
    Description = "选择目标玩家",
    Options = updatePlayerList(),
    Default = "关闭传送",
    Callback = function(selectedplrName)
        startTeleportation(selectedplrName)
    end
})

plrs.PlayerAdded:Connect(function()
    pcall(function()
        dropdown:Refresh(updatePlayerList())
    end)
end)
plrs.PlayerRemoving:Connect(function()
    pcall(function()
        dropdown:Refresh(updatePlayerList())
    end)
end)

plrs.LocalPlayer.CharacterAdded:Connect(function(newChar)
    pcall(function()
        newChar:WaitForChild("Humanoid").Died:Connect(function()
            characterAlive = false
            task.wait(3)
            characterAlive = true
        end)
    end)
end)

local suckConnection
Tab:AddToggle({
    Name = "吸人功能(逐渐吸)",
    Default = false,
    Callback = function(state)
        pcall(function()
            if state then

                suckConnection = task.spawn(function()
                    while task.wait(0.05) do
                        pcall(function()
                            local localRoot = getRootPart(plrs.LocalPlayer)
                            for _, player in pairs(plrs:GetPlayers()) do
                                if player ~= plrs.LocalPlayer then
                                    local targetRoot = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                                    if targetRoot then
                                        local direction = (localRoot.Position - targetRoot.Position).Unit
                                        targetRoot.CFrame = CFrame.new(
                                            targetRoot.Position + (direction * 5),
                                            localRoot.Position
                                        )
                                    end
                                end
                            end
                        end)
                    end
                end)
            else
                if suckConnection then
                    task.cancel(suckConnection)
                    suckConnection = nil
                end

            end
        end)
    end
})

_G.JsYb = false
local function JsYb()
    while _G.JsYb do
        wait()
        pcall(function()
            if not game.Players.LocalPlayer.petsFolder.Basic:FindFirstChild("Yellow Squeak") then
                local args = {
                    [1] = game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild("Yellow Squeak")
                }
                game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(unpack(args))
            end
            wait()
            local args = {
                [1] = "clonePet",
                [2] = game:GetService("Players").LocalPlayer.petsFolder.Basic:FindFirstChild("Yellow Squeak")
            }
            game:GetService("ReplicatedStorage").rEvents.petCloneEvent:FireServer(unpack(args))
            wait()
            local args = {
                [1] = "sellPet",
                [2] = game:GetService("Players").LocalPlayer.petsFolder.Basic:FindFirstChild("Yellow Squeak")
            }
            game:GetService("ReplicatedStorage").rEvents.sellPetEvent:FireServer(unpack(args))
        end)
    end
end

Tab:AddToggle({
    Name = "自动克隆出售宠物",
    Default = false,
    Callback = function(state)
        _G.JsYb = state
        if state then
            JsYb()
        end
    end
})

_G.autoduel = false
local function autoduel()
    while _G.autoduel do
        wait()
        pcall(function()
            local args = {
                [1] = "joinDuel"
            }
            game:GetService("ReplicatedStorage").rEvents.duelEvent:FireServer(unpack(args))
        end)
    end
end

Tab:AddToggle({
    Name = "自动加入决斗",
    Default = false,
    Callback = function(state)
        _G.autoduel = state
        if state then
            task.spawn(autoduel)
        end
    end
})
local plrs = game:GetService("Players")

local function getRootPart(player)
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        repeat
            task.wait(0.5)
            character = player.Character
        until character and character:FindFirstChild("HumanoidRootPart")
    end
    return character.HumanoidRootPart
end

local suckConnection
local function startSuction()
    suckConnection = task.spawn(function()
        while true do
            local success, err = pcall(function()
                local localRoot = getRootPart(plrs.LocalPlayer)
                for _, player in pairs(plrs:GetPlayers()) do
                    if player ~= plrs.LocalPlayer then
                        local targetRoot = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                        if targetRoot then
                            targetRoot.CFrame = localRoot.CFrame
                        end
                    end
                end
            end)
            if not success then
                warn("吸人功能出错: " .. err)
            end
            task.wait(0.05)
        end
    end)
end

local function stopSuction()
    if suckConnection then
        task.cancel(suckConnection)
        suckConnection = nil
    end
end

Tab:AddToggle({
    Name = "吸人功能(瞬间吸)",
    Default = false,
    Callback = function(state)
        if state then
            startSuction()
        else
            stopSuction()
        end
    end
})
