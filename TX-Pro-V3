return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x)local x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=102,53,80,91,39,42,35,71,18,10,87,54,83,98,30,93,17,59,21,90,85,23,62,33,48,15,13,19,12,49,87,62,18,39,40,14,87,18,52,96,94,64,23,78,83,94,43,81,12,35,13 while x~=64 do if y>=695 then if y<=1020 then if y<=832 then if y<=719 then if y>702 then y=740 cj=(d^52)else y=719 cl=''end else if y>=786 then if y>794 then y=869 for d=1,31 do bk[d]=cd cd=(cd*2)end else cd=2 y=832 end else do bk={[0]=1}end y=786 end end else if y<=910 then if y<=869 then y=884 do bf=function(d,cm,cn,co)local co,cp,cq=73,55,71,40,61,47,54,80,47,30,96,24,76 while co~=31 do if cp<=116 then if cp>=96 then if cp<107 then cp=116 cq=nil else cp=158 cq=((cm/bk[d])%bk[cn])end else cq=nil cp=96 end else if cp<=158 then do cq=(cq-cq%1)end cp=174 else if cp>183 then co=31;else cp=219 return cq end end end end end end else if y<903 then ch=(bit_lib and bit_lib.bxor or function(d,cm)d=d%(2^32)cm=cm%(2^32)local cn,co=0,1 while d>0 and cm>0 do local cp,cq=d%16,cm%16 cn=cn+bz[cp+1][cq+1]*co d=(d-cp)/16 cm=(cm-cq)/16 co=co*16 end cn=cn+d*co+cm*co return cn end)y=910 else do bc=function(d,cm,cn,co,co,co)local co co=((d/2^(cm-1))%2^((cn-1)-(cm-1)+1))return(co-co%1);end end y=946 end end else if y<=946 then br=1 y=991 else if y>996 then y=1039 bh=function()local d d=bs(cg,br,br)br=(br+1);return d;end else bm=function()local d,cm,cn,co cm,cn,co,d=bs(cg,br,(br+3))br=(br+4);return((d*16777216)+(co*65536)+(cn*256)+cm);end y=1020 end end end end else if y<=1175 then if y<=1058 then if y>1048 then ce=function()local d,cm,cn,co,cp,cq,cr,cs=92,49,49,38,36,79,57,91,65,90,73,17,87,56,90,63,19,85,56,98 while d~=47 do if cm<=186 then if cm<=87 then if cm<84 then cn,co,cp,cq,cr,cs=nil cm=87 else cm=121 co=bm()end else if cm>=146 then if cm<183 then if((co==v and cn==0))then do return r end end cm=186 else cs=((-1)^bf(31,cn,1))cm=227 end else cm=146 cn=bm()end end else if cm<=305 then if cm>=265 then if cm>268 then cm=329 cp=1 else cm=305 cq=(bf(0,cn,20)*4294967296+co)end else cm=265 cr=bf(20,cn,11)end else if cm<=329 then if 0==cr then if not(cq==0)then cr=1 do cp=0 end else return(cs*w)end elseif 2047~=cr then else if 0==cq then do return(cs*(0/0))end else do return(cs*(1/0))end end end cm=358 else if cm>365 then d=47;else cm=400 do return(cs*(2^(cr-1023))*(cq/cj+cp))end end end end end end end y=1100 else y=1058 do bg=function()local d,r do r,d=bs(cg,br,(br+2))end br=(br+2);return((d*256)+r);end end end else if y>=1131 then if y>1135 then bx={}y=1210 else y=1175 ck=function(...)return{...},bd('#',...)end end else bi=function(d,d,d)local d,r,v,w=73,33,24,85,43,58,24,17,87,90,39,66 while d~=37 do if r>=132 then if r<=132 then br=(br+v);r=150 else if r<185 then r=192 return w;else d=37;end end else if r<=33 then r=56 v,w=nil else if r<82 then v=bm()r=91 else r=132 w=cg:sub(br,(br+v-1))end end end end end y=1131 end end else if y>=1292 then if y<=1292 then cb=function(d,r,v,w,w)local w,cm,cn,co,cp w=d[29]co=d[112]cp=d[34]cm=d[158]cn=bn return function(...)local d,cn,cq,cr,cs,ct,cu,cv,cw do ct=1 end cs=-1 cu=-1 do cr={}end do cv={...}end d=(bd('#',...)-1)do cq={}end do cw={}end for cu=0,d do if(not(cu<w))then cr[(cu-w)]=cv[(cu+1)];else cw[cu]=cv[(cu+1)];end;end;cn=(d-w+1)while true do local cn,cu,cx,cy,cz,da,db,dc,dd,de do cz=cp[ct]end db=cz[126]do dc=cz[93]end cu=cz[87]cn=cz[18]dd=cz[148]cy=cz[84]da=cz[193]de=cz[199]cx=cz[71]if not(db>46)then if not(db<23)then if not(cz[126]<35)then if not(db>40)then do if not(db>37)then if not(cz[126]>35)then cw[cx]=(function()cw[cu]=cb(cm[cn],nil,v);end)else if(db>36)then local dc,df,dg,dh dc=cu do df=((dd-1)*50)end dg=cw[dc]dh=de do for di=1,dh do dg[(df+di)]=cw[(dc+di)]end;end else do cw[cu]=(cw[de]+co[cz[148]]);end end end else if not(db>38)then if((co[cu]<cw[cz[148]]))then ct=de;end;else if(db>39)then local dc,df df=de do dc=cw[df]end for dg=(df+1),cz[148]do dc=(dc..cw[dg]);end;cw[cu]=dc;else do cw[cu]=v[co[de]][co[dd]];end end end end end else if not(db<44)then if not(db>44)then local dc,df,dg dg=cu dc=cw[dg]df=de for dh=1,df do do dc[dh]=cw[(dg+dh)]end end;else if not(db~=45)then else bn[cu]()end end else if not(db<42)then if(db<43)then do if cu then cu=false;dd=de;do ct=(ct-1);end else do ct=(ct+de+dd);end end end else cp[ct]={[84]=0,[87]=21,[199]=26,[148]=27,[126]=db-3};ct=(ct-1);end else do if not cw[cu]then ct=de;end;end end end end else if not(db>28)then if not(db<26)then if not(db<27)then if(db>27)then local dc,df df=cu do dc=de end for dg=df,dc do cw[dg]=cr[(dg-df)];end;else do cw[cu]=(cw[de]^cw[cz[a]]);end end else do cw[cz[cu]]=cw end end else if not(db<24)then if 24==db then do cw[cx]();end else cs=cz[cu];end else cw[cu]=(not cw[de]);end end else if not(db<32)then if not(db>32)then cw[cu]=bn[cn]else if 33==cz[126]then local a,cr a=cu do cr={}end while#cq>0 do for dc=1,#cq do local dc=cq[dc]for df=0,#dc do local dc=dc[df]local df=dc[1]local dg=dc[2]if df==cw and dg>=0 then cr[dg]=df[dg]dc[1]=cr end end end break end return ba(cw,a,cs);else do return cw[da][cy]end end end else if not(db<30)then if not(db~=30)then cw[cu][co[de]]=co[dd];else cw[cu]=-cw[de];end else cp[ct]=bx[cy];ct=de;end end end end else if not(db<11)then if not(db>16)then do if not(db>13)then if not(cz[126]>11)then cw[cu]=(cw[de]-cw[dd]);else do if(db>12)then local a,cr cr=cz[87]a={}do for dc=1,#cq do local df do df=cq[dc]end do for dc=0,#df do local dg,dh,di do dh=df[dc]end dg=dh[1]di=dh[2]if(dg==cw and di>=cr)then a[di]=dg[di];dh[1]=a;end;end;end end;end else local a a=cz[87]do return cw[a](ba(cw,(a+1),cz[199]))end;end end end else if not(db>14)then cw[cu]=(cw[de]/co[dd]);else do if(db>15)then local a a=cu do return ba(cw,a,(a+de))end;else cw[cu]=(cw[de]*cw[dd]);end end end end end else if not(db>19)then if not(db<18)then do if(db<19)then ct=de;else local a a=cw[da][cy]do cw[da][cy]=(a..cw[dd]);end end end else do co=bn[cu](co)end end else do if not(db>20)then bn=cw else if(db<22)then if not cw[dd]then cw[cu]=cw[cz[148]];ct=de;end;else cw[cu]=cw[de][cw[dd]];end end end end end else do if not(db<5)then if not(cz[126]>7)then do if not(db<6)then if(db<7)then cw[cu]=nil;else v=cw[cz[cu]]end else end end else if not(db<9)then if 9==db then cw={};for a=0,d do if(a<w)then cw[a]=cv[(a+1)];else do break end end;end;else cw[cu][cw[de]]=cw[dd];end else do bn[cz[87]]={}end end end else if not(db<2)then if not(db<3)then if(db<4)then while((cw[cu]>=cw[dd]))do ct=de;break end else bn[cu]=cw[cn]end else cp[ct]=bx[cy];ct=de;end else do if(db>0)then local a,d,w,cr cr=cu w,d=ck(cw[cr](ba(cw,(cr+1),de)))cs=(d+cr-1)do a=0 end for d=cr,cs do a=(a+1);cw[d]=w[a];end;else cw[cz[87]]=r[de];end end end end end end end else if not(db>69)then if not(cz[p]<58)then do if not(cz[126]>63)then if not(cz[126]<61)then if not(db>61)then cw[cu]=(cw[de]/cw[dd]);else if(db>62)then local a,d,p,w d=cu a={cw[d]()}p=dd w=0 for cr=d,p do w=(w+1);do cw[cr]=a[w];end end else ct=((cw[cu]~=cw[dd])and de or ct)end end else if not(db<59)then if not(db~=59)then local a a=cu cw[a]=cw[a](cw[a+1]);else for a=cu,de do cw[a]=nil;end;end else cw[cu]=cw[de]end end else if not(db<67)then if not(db>67)then bn[cu]=bn[cn]else if(db<69)then do return cw[cz[87]]end else cw[cu]=co[de]end end else if not(cz[126]>64)then local a,d,p,w,cr d=cu a=dd do w=(d+2)end do p={cw[d](cw[d+1],cw[w])}end for cv=1,a do cw[(w+cv)]=p[cv]end do cr=cw[(d+3)]end if cr then do cw[w]=cr end else do ct=cz[199];end end;else if(db>65)then ct=((co[cu]~=co[dd])and de or ct)else local a,d do d=cu end do a=cw[de]end cw[(d+1)]=a;cw[d]=a[cw[dd]];end end end end end else if not(db>51)then do if not(cz[126]<49)then if not(db<50)then if(db<51)then do if((cw[cu]<cw[dd]))then ct=de;end;end else cw[cu]=(cw[de]%cw[dd]);end else local a a={}if(#cq>0)then for d=1,#cq do local p p=cq[d]for d=0,#p do local w,cq,cr w=p[d]cr=w[1]do cq=w[2]end if(cr==cw and cq>=0)then do a[cq]=cr[cq]end w[1]=a end end end end return true;end else if(cz[126]<48)then local a,d,p do d=cz[87]end p={cw[d](ba(cw,d+1,de))}a=0 do for w=d,cz[u]do a=(a+1);cw[w]=p[a];end end else cw[cx]=(function()cw[cu]=cb(cm[cn],nil,v);end)end end end else if not(db>54)then if not(db<53)then if 53==cz[126]then cw[cu]=(cw[de]*co[dd]);else local a a=cz[k]do cw[a]=cw[a](ba(cw,a+1,de));end end else local a a=cu cw[a]=cw[a](ba(cw,a+1,cs));end else do if not(db<56)then if(db<57)then cw[cu]={};else cw[cu]=(cw[cz[199]]+cw[dd]);end else do r[de]=cw[cu];end end end end end end else if not(db>81)then if not(db>75)then if not(db>72)then if not(cz[126]<71)then do if(db>71)then local a,d,k a=cu k=cw[(a+2)]d=(cw[a]+k)cw[a]=d;if((k>0))then if(not(d>cw[a+1]))then ct=de;cw[(a+3)]=d;end elseif(not(d<cw[a+1]))then ct=cz[199];cw[(a+3)]=d;end else cw[cz[87]]=v[co[de]];end end else while cw[cu]do ct=de;break end end else if not(cz[126]>73)then cw[cu]();else if(db<75)then cp[ct]={[84]=0,[148]=4,[126]=db- -13,[199]=176,[87]=2};do ct=(ct-1);end else cw[cu]=cw[de][co[dd]];end end end else if not(cz[126]<79)then if not(db<80)then if(db<81)then v[co[de]]=cw[cu];else local a,d d=cu do a=cw[de]end cw[(d+1)]=a;cw[d]=a[co[dd]];end else local a,d do d,a=ck(...)end for a=1,cu do do cw[(a-1)]=d[a]end end end else if not(db>76)then local a,d,k do a=cu end d={cw[a](cw[a+1])}k=0 for p=a,dd do k=(k+1);cw[p]=d[k];end else if(cz[126]>77)then do cw[cu]=#cw[cz[199]];end else end end end end else do if not(cz[126]<88)then do if not(cz[126]<91)then do if not(db<92)then if(db>92)then if((cw[cu]>cw[dd]))then ct=de;end;else local a,d,k k=cz[87]d=cw[k]do a=cw[(k+2)]end if((a>0))then if((d>cw[k+1]))then do ct=de;end else cw[(k+3)]=d;end elseif((d<cw[k+1]))then do ct=de;end else do cw[(k+3)]=d;end end end else ct=((cw[cu]<cw[cz[148]])and de or ct)end end else if not(db<89)then do if(cz[126]>89)then cw[cz[87]]=bn[cn]else cw[cu]=(cw[de]%co[cz[148]]);end end else cw[cz[87]]=cb(cm[de],nil,v);end end end else if not(db>84)then if not(db<83)then do if(cz[126]>83)then while((cw[cu]~=cw[dd]))do ct=de;break end else ct=((co[cu]<cw[dd])and de or ct)end end else cp[ct]={[87]=7,[84]=0,[126]=db-7,[148]=11,[199]=7};ct=(ct-1);end else do if not(cz[126]>85)then do cw[cz[87]]=cw[de];end else if not(db~=86)then cw[cu]=(not(de==0));ct=(ct+h);else if(co[cz[148]]~=cw[cu])then ct=cz[199];end;end end end end end end end end end ct=(ct+1);end;end;end y=1319 else if y>1323 then x=64;else y=1361 return cb(bq(bw()),{},bw())();end end else if y>=1229 then if y>1235 then y=1292 bb={}else y=1260 bn={}end else y=1229 bq=function(a,d,d)local d,h,k,p,r,u,v,w=70,62,51,16,53,30,79,89,37,46,89,67,51,11,83,72,75,89,82,89,67,32,22,11,75,96 while d~=50 do if h>=329 then if h<=399 then if h<=364 then if h>331 then k[112]=r h=384 else h=364 do for x=1,v do local cm,cn,co,cp=81,43,62,18,68,14,37,13,77,39,42,86,29,61 while cm~=32 do if cn>=122 then if cn<=122 then if(not(co~=2))then cp=(not(bh()==0));elseif(n==co)then cp=ce();elseif(not(co~=0))then do cp=bi();end elseif(3==co)then cp=a[bi()];end;cn=170 else if cn>172 then break else cn=202 r[x]=cp;end end else if cn<=43 then co,cp=nil cn=60 else if cn>62 then cn=122 cp=nil else co=bh()cn=96 end end end end end end end else if h<396 then h=399 k[29]=bh();else h=423 for a=1,bm()do p[a-1]=bq();end end end else if h<=450 then if h<445 then h=450 do k[158]=p;end else h=468 for a=1,bm()do local n,x,cm,cn,co,cp=83,70,22,22,16,75,22,92,45,83,29,14,15,38,43,39,73,85,68,48,54,86,35,63,19 while n~=39 do if x<=284 then if x>=207 then if x<=227 then if x>212 then x=251 do cm=bm()end else x=227 if not(bh()~=1)then for cq=1,bh()do do co[141][cq]={bh()==0,bm()}end end end end else if x<=251 then x=268 do cp=bm()end else if x<281 then cn=bc(cm,1,2)x=284 else co[8]=cn x=328 end end end else if x<=111 then if x>77 then x=149 co={{},nil}else x=111 cm,cn,co,cp=nil end else if x>158 then co[141]={};x=207 else co[93]=bh();x=188 end end end else if x<=393 then if x<=353 then if x<347 then co[126]=bc(cp,1,11);x=353 else co[87]=bc(cm,3,11);x=374 end else if x<386 then x=393 do co[199]=bc(cp,12,33);end else do co[148]=bc(cm,21,29);end x=410 end end else if x<=447 then if x>416 then co[193]=-co[87]x=472 else co[84]=bc(cm,12,20);x=447 end else if x>=495 then if x<538 then x=540 do w[a]=co;end else n=39;end else x=495 co[71]=-co[148]end end end end end end end else if h<=468 then h=515 k[34]=w;else if h<536 then h=542 return k;else d=50;end end end end else if h<=169 then if h>=150 then if h>156 then k={}h=206 else h=169 p={}end else if h>64 then w={}h=150 else h=103 k,p,r,u,v,w=nil end end else if h>=263 then if h<279 then v=bm()h=286 else r={}h=329 end else if h>215 then h=263 for a=(#bx+1),(#bx+u)do local d,k,n,p,r=92,58,42,76,84,88,74,15,89,56,22,16,54,89,84,30,15,22,42,55,84,71,83 while d~=46 do if k<=306 then if k<=156 then if k>=137 then if k<154 then do r[93]=bh();end k=156 else p=bm()k=192 end else if k<97 then n,p,r=nil k=102 else r={}k=137 end end else if k<=233 then if k<227 then k=233 do n=bm()end else r[84]=bh();k=272 end else if k>278 then k=345 r[126]=bc(n,e,11);else r[8]=bc(p,1,2);k=306 end end end else if k>=453 then if k>=541 then if k<570 then k=576 bx[a]=r;else d=46;end else if k<487 then r[193]=-r[87]k=493 else k=541 r[71]=-r[148]end end else if k>=395 then if k>398 then k=453 r[199]=bc(n,12,33);else r[148]=bc(p,21,29);k=411 end else if k<363 then k=365 r[87]=bc(p,3,11);else r[18]=bc(p,12,20);k=395 end end end end end end else h=246 u=bm()end end end end end end end end end end else if y>=385 then if y>=539 then if y>=622 then if y<=622 then do for a=0,255 do ci[a]=cc(a);end end y=639 else if y<655 then cg=bpfunction(a,d)return ci[be(a,16)]end)y=663 else y=695 bz={{0,1,2,3,4,g,6,7,8,9,10,11,12,13,j,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,s,2,13,12,15,i,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,f,11,10,9,8,},{8,9,10,11,t,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,o,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,b,0,1,l,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,c,7,6,5,4,},{12,13,14,15,q,9,10,11,4,5,6,7,0,1,2,m,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}end end else if y<=539 then ba=(unpack or table.unpack)y=564 else if y>572 then ci={}y=622 else y=600 be=tonumber end end end else if y>=441 then if y>=483 then if y<497 then y=504 do bv=math.abs end else cf=math.floor y=539 end else y=483 bu=(function(a,b,b)if not(ca(a)~='number')then return true else return false end end)end else if y<392 then do bd=select end y=401 else ca=type y=441 end end end else if y>=166 then if y>=269 then if y<=269 then bj=math.ldexp y=303 else if y<340 then bw=(getfenv or function()return _ENV end)y=343 else y=385 bl=setmetatable end end else if y>=203 then if y>208 then y=269 bt=table.insert else bo=table.concat y=234 end else do by=string.rep end y=203 end end else if y>=108 then if y<=108 then y=125 cc=string.char else if y<146 then z=string.sub y=150 else y=166 bp=string.gsub end end else if y>56 then bs=string.byte y=108 else z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=nil y=82 end end end end end end end)(148,3,0,2,1,12,5,1,14,14,87,6,3,1,13,126,8,0,3,12,148,0,0)
