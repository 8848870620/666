return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb)local bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=97,106,85,48,97,74,29,88,24,75,84,56,14,91,58,52,55,53,62,57,91,27,17,10,40,40,50,40,68,67,22,95,47,97,78,24,83,46,48,38,69,90,57,33,40,23,24,14,23,92,51,34 while bb~=69 do if bc<=853 then if bc>=457 then if bc>=658 then if bc>=762 then if bc<=762 then for bb=0,255 do bj[bb]=cl(bb);end bc=806 else if bc>809 then co={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,y,5,10,11,8,9,w,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,q,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{h,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,g,},{7,6,5,4,3,2,p,0,m,14,13,12,11,10,9,8,},{8,9,10,11,12,13,k,15,0,1,c,3,4,5,6,7,},{9,8,j,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,t,7,u,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}bc=895 else ci=bhfunction(c,g,g)return bj[bz(c,16)]end)bc=853 end end else if bc<=658 then bc=698 cp=(unpack or table.unpack)else if bc>700 then bc=762 bj={}else bz=tonumber bc=720 end end end else if bc<=504 then if bc>460 then do br=type end bc=539 else bc=504 bl=select end else if bc>=587 then if bc<611 then bf=math.abs bc=614 else by=math.floor bc=658 end else bn=(function(c,g)if not(br(c)~='number')then return true else do return false end end end)bc=587 end end end else if bc>=262 then if bc>=361 then if bc>=391 then if bc<408 then cd=(getfenv or function()return _ENV end)bc=417 else bc=457 bo=setmetatable end else do bk=math.ldexp end bc=391 end else if bc<=262 then cj=string.rep bc=286 else if bc<322 then be=table.concat bc=328 else bc=361 bp=table.insert end end end else if bc>=190 then if bc<=190 then cl=string.char bc=210 else if bc<229 then bc=236 bv=string.sub else bh=string.gsub bc=262 end end else if bc<137 then bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp=nil bc=145 else bc=190 ck=string.byte end end end end else if bc<=1233 then if bc>=1059 then if bc<=1136 then if bc>=1104 then if bc>1107 then bd=function(c,g,h,j,j)local j j=((c/2^(g-1))%2^((h-1)-(g-1)+1))return(j-j%1);end bc=1174 else bx=(bit_lib and bit_lib.bxor or function(c,g)c=c%(2^32)g=g%(2^32)local h,j=0,1 while c>0 and g>0 do local k,m=c%16,g%16 h=h+co[k+1][m+1]*j c=(c-k)/16 g=(g-m)/16 j=j*16 end h=h+c*j+g*j return h end)bc=1136 end else bc=1104 cb=function(c,g,h,j)local j,k,m=82,38,54,71,80,31,15,69,59,66,89,92,31 while j~=33 do if k<=109 then if k<=38 then m=nil k=73 else if k<104 then m=nil k=109 else k=145 m=((g/cc[c])%cc[h])end end else if k>=185 then if k>189 then break else k=208 return m end else m=(m-m%1)k=185 end end end end end else if bc>=1215 then if bc>1218 then bq=function()local c do c=ck(ci,cm,cm)end cm=(cm+1);return c;end bc=1255 else bc=1233 do bi=function()local c,g,h,j h,c,j,g=ck(ci,cm,(cm+3))cm=(cm+4);do return((g*16777216)+(j*65536)+(c*256)+h);end end end end else cm=1 bc=1215 end end else if bc>=957 then if bc>=1001 then if bc>1009 then do for c=1,31 do cc[c]=cg cg=(cg*2)end end bc=1059 else bc=1027 do cg=2 end end else do cc={[z]=1}end bc=1001 end else if bc<933 then bg=''bc=942 else bc=957 ce=(2^52)end end end else if bc<=1363 then if bc<=1279 then if bc>1263 then do bm=function()local c,g,h,j,k,m,p,q=61,48,65,17,49,72,76,67,62,46,97,46,63,61,54,46,49,23,25 while c~=38 do if g<=178 then if g>=106 then if g>=149 then if g>153 then p=((-1)^cb(31,h,1))g=212 else g=178 if((j==0 and h==0))then return 0 end end else do h=bi()end g=149 end else if g>51 then g=106 j=bi()else g=68 h,j,k,m,p,q=nil end end else if g<=279 then if g<=212 then g=243 k=cb(20,h,11)else if g>246 then m=1 g=326 else q=(cb(0,h,20)*4294967296+j)g=279 end end else if g<=326 then g=352 if 0==k then if 0~=q then k=1 do m=0 end else return(p*0)end elseif 2047~=k then else if not(q~=0)then do return(p*(0/0))end else return(p*(1/0))end end else if g<382 then g=385 return(p*(2^(k-1023))*(q/ce+m))else c=38;end end end end end end end bc=1300 else cf=function()local c,g do c,g=ck(ci,cm,(cm+2))end do cm=(cm+2);end return((g*256)+c);end bc=1279 end else if bc<=1300 then ca=function(c,c)local c,g,h,j=83,55,24,19,60,66,82,26,61,54,73,76,92 while c~=39 do if g>=138 then if g>=185 then if g<195 then g=202 return j;else c=39;end else cm=(cm+h);g=185 end else if g<=55 then h,j=nil g=76 else if g<87 then h=bi()g=94 else do j=ci:sub(cm,(cm+h-1))end g=138 end end end end end bc=1319 else if bc<1358 then bc=1363 bs=function(...)return{...},bl('#',...)end else bc=1405 cn={}end end end else if bc<=1469 then if bc<=1405 then bc=1434 bt=function(c,g,g)local g,h,j,k,m,p,q,t=64,61,96,81,58,92,17,72,42,98,42,13,80,40,30,31,69,89,63,40,35,42,78,85,64 while g~=41 do if h<=284 then if h>=214 then if h>=266 then if h<280 then q[9]=bq();h=284 else for u=1,bi()do local w,y,z,bb,be,bf=72,56,59,81,91,22,22,88,89,87,11,13,92,51,95,62,40,18,10,27,93,77,62,77,15,87,61 while w~=53 do if y<=307 then if y>=179 then if y>=239 then if y<=239 then y=284 bf=bi()else if y<300 then bb=bd(z,1,2)y=307 else be[167]=bb y=355 end end else if y>183 then z=bi()y=239 else while bq()==1 do for bg=1,bq()do be[131][bg]={bq()==0,bi()}end break end y=216 end end else if y<=76 then if y<72 then y=76 z,bb,be,bf=nil else y=113 be={{},nil,nil,nil}end else if y>118 then do be[131]={};end y=179 else be[10]=bq();y=134 end end end else if y>=500 then if y>=554 then if y<=554 then be[99]=-be[73]y=581 else if y<612 then y=616 k[u]=be;else w=53;end end else if y<535 then be[113]=bd(z,12,20);y=539 else be[95]=-be[156]y=554 end end else if y<=398 then if y<392 then y=398 do be[141]=bd(bf,1,11);end else be[156]=bd(z,3,11);y=420 end else if y>423 then y=500 be[73]=bd(z,21,29);else do be[143]=bd(bf,12,l);end y=454 end end end end end end h=317 end else if h<237 then p=bi()h=242 else h=266 for l=(#cn+1),(#cn+p)do local u,w,y,z,bb=79,54,64,38,48,75,99,16,14,32,80,73,60,45,98,65,12,87,12,62,58,35,32,47 while u~=44 do if w>=270 then if w>=385 then if w>=443 then if w<455 then w=463 do cn[l]=y;end else u=44;end else if w<401 then w=406 y[s]=-y[156]else w=443 do y[99]=-y[73]end end end else if w<=287 then if w>273 then do y[189]=bd(z,12,20);end w=324 else y[156]=bd(z,3,11);w=287 end else if w<364 then do y[ba]=bd(z,21,29);end w=370 else y[143]=bd(bb,12,33);w=385 end end end else if w>=181 then if w<=207 then if w>184 then w=222 y[113]=bq();else w=207 do bb=bi()end end else if w>227 then w=270 do y[141]=bd(bb,1,11);end else w=252 y[167]=bd(z,1,2);end end else if w>=123 then if w<149 then w=151 do y[v]=bq();end else w=181 z=bi()end else if w<93 then w=96 y,z,bb=nil else do y={}end w=123 end end end end end end end end else if h<=95 then if h<91 then j,k,m,p,q,t=nil h=95 else k={}h=131 end else if h>133 then q={}h=214 else m={}h=167 end end end else if h<=404 then if h<=357 then if h>324 then h=387 t=bi()else q[84]=k;h=357 end else if h>396 then for k=1,t do local l,p,s,t=51,58,68,88,79,34,58,88,16,32,30,73,94,52 while l~=35 do if p<=125 then if p>=102 then if p<120 then do t=bq()end p=125 else s=nil p=149 end else s,t=nil p=102 end else if p<=149 then if(not(t~=0))then s=(0~=bq());elseif(not(t~=4))then s=bm();elseif(2==t)then s=ca();elseif(3==t)then s=c[ca()];end;p=188 else if p<215 then p=217 j[k]=s;else l=35;end end end end end h=443 else do j={}end h=404 end end else if h<=459 then if h>451 then for c=1,bi()do m[c-1]=bt();end h=506 else q[36]=j h=459 end else if h<=506 then q[29]=m;h=531 else if h<565 then h=571 return q;else g=41;end end end end end end end else if bc<1467 then do bu={}end bc=1469 else bc=1491 do ch={}end end end else if bc<=1491 then bc=1534 bw=function(c,g,h,j,j)local j,k,l,m,p j=c[9]do m=c[29]end p=c[36]l=bu k=c[84]return function(...)local c,l,q,s,t,u,v,w,y do q=1 end c=-1 v=-1 u={}y={...}w=(bl('#',...)-1)do l={}end s={}for v=0,w do if(not(v<j))then u[(v-j)]=y[(v+1)];else s[v]=y[(v+1)];end;end;t=(w-j+1)while true do local t,v,z,ba,bb,bd,be,bf,bg,bh be=k[q]do ba=be[141]end do v=be[10]end bh=be[156]bg=be[189]z=be[73]bd=be[113]bf=be[95]t=be[143]bb=be[99]if not(be[141]<45)then if not(ba>66)then if not(ba<56)then if not(be[141]>60)then if not(ba>57)then if(ba<i)then local i,v i=bh v={}if(#l>0)then for bi=1,#l do local bj bj=l[bi]for bi=0,#bj do local bk,bl,bm do bl=bj[bi]end bm=bl[1]bk=bl[2]if(bm==s and bk>=0)then do v[bk]=bm[bk]end bl[1]=v end end end end return s[i],s[(i+e)]elseif((p[bh]<s[z]))then q=be[143];end else if not(ba>58)then s[bh]=s[t]else if(ba<60)then p=bu[bh](p)else bu=s end end end else if not(be[141]>63)then do if not(ba<62)then if(ba<63)then local e do e=bh end do return s[e](cp(s,(e+1),t))end;else do s[bh]=(s[t]/s[z]);end end else s[bb]();end end else do if not(ba<65)then if not(be[141]~=65)then s[bh]=(p[t]<s[be[73]]);else q=((p[bh]~=p[z])and be[143]or q)end else s[bh]=(s[t]-s[z]);end end end end else if not(ba<50)then if not(ba>52)then if not(ba<51)then if(ba<52)then do h=s[be[bh]]end else s[bh]=h[p[t]][p[z]];end else s[bh]=(not(t==0));q=(q+1);end else if not(be[141]<54)then if(ba>54)then s[bh]=(s[t]*p[z]);else s[bh]={};end else s[be[bh]]=s end end else if not(ba>46)then do if not(be[141]~=45)then local e,i i=be[143]do e=s[i]end for v=(i+1),z do do e=(e..s[v]);end end;do s[bh]=e;end else do return s[bh]();end;end end else if not(ba>47)then s[bh]=f;else if(ba<49)then local e e=bh s[e]=s[e](cp(s,e+1,t));else do q=t;end end end end end end else if not(ba>77)then if not(ba<72)then if not(ba<75)then if not(ba<76)then if not(ba~=76)then local e e=bh s[e]=s[e](s[e+1]);else local e,f,i f=be[156]e={s[f](s[f+1])}i=0 for v=f,z do i=(i+1);do s[v]=e[i];end end end else local e,f,i,v e=bh i,f=bs(s[e](cp(s,(e+1),t)))c=(f+e-1)v=0 for f=e,c do do v=(v+1);end do s[f]=i[v];end end;end else if not(ba<73)then if(ba<74)then q=((s[bh]<s[z])and t or q)else local e,f do f=be[156]end e={}if(#l>0)then for i=a,#l do local a do a=l[i]end for i=0,#a do local v,bi,bj do v=a[i]end do bi=v[1]end bj=v[2]if(bi==s and bj>=0)then e[bj]=bi[bj]v[1]=e end end end end return cp(s,f,c);end else q=((p[bh]<s[z])and t or q)end end else if not(be[141]>d)then if(ba>67)then do s[bh]=(s[be[143]]^s[z]);end else s[bh]=(s[t]*s[z]);end else if not(ba<70)then do if not(ba~=70)then bu[bh]=s[bg]else local a,d,e a=bh d={s[a](cp(s,a+1,t))}e=0 for f=a,z do do e=(e+1);end s[f]=d[e];end end end else g[be[143]]=s[bh];end end end else if not(ba>83)then if not(ba<81)then if not(be[141]>o)then do s[bb]=(function()s[be[156]]=bw(m[be[189]],nil,h);end)end else do if 82==ba then local a,d d,a=bs(...)do for a=1,bh do s[(a-1)]=d[a]end end else local a do a={}end if(#l>0)then for d=1,#l do local e e=l[d]for d=0,#e do local f,i,o f=e[d]o=f[1]i=f[2]while(o==s and i>=0)do a[i]=o[i]f[1]=a break end end end end return s[(bh+2)];end end end else if not(ba<79)then if(ba<b)then do h[p[t]]=s[bh];end else end else local a a=s[bf][be[113]]s[bf][be[113]]=(a..s[z]);end end else if not(ba<87)then if not(ba>87)then local a do a=bh end do do return cp(s,a,(a+t))end;end else if 88==be[x]then s[bh]=bu[bg]else k[q]=cn[bd];do q=t;end end end else if not(ba<85)then if 85==ba then bu[bh]={}else s[bh]=bw(m[t],nil,h);end else if s[bh]then q=t;end;end end end end end else do if not(ba<22)then if not(ba<33)then if not(ba<39)then do if not(ba>41)then if not(be[141]>39)then s[be[156]]();else do if(ba>40)then s[bh][s[t]]=s[z];else bu[bh]()end end end else if not(be[141]<43)then if 43==ba then do s[bh][p[t]]=p[z];end else s[bh]=(s[t]+s[z]);end else local a a=be[156]do s[a]=s[a](cp(s,a+1,c));end end end end else do if not(be[141]<36)then if not(ba<r)then if(ba>37)then else s[bh]=(s[t]/p[z]);end else s[bh]=bu[bg]end else if not(ba>33)then do k[q]=cn[bd];end q=t;else if(ba>34)then local a,b a=be[156]b=s[t]s[(a+1)]=b;s[a]=b[p[z]];else local a,b a=bh b=t for d=a,b do s[d]=u[(d-a)];end;end end end end end else if not(ba>26)then if not(ba>23)then if(ba>22)then s[bh]=p[be[143]]elseif(p[z]~=s[be[156]])then q=t;end else if not(ba<25)then if(ba>25)then if not s[z]then s[bh]=s[be[73]];q=t;end;else s[bh]=(s[t]+p[z]);end else do do do return s[bf][be[113]]end end end end end else if not(ba>29)then if not(ba>27)then if(not(s[bh]<s[be[73]]))then do q=t;end end;else if(ba>28)then s[bh]=s[t];else local a,b,d,e,f a=be[156]do e=z end b=(a+2)f={s[a](s[a+1],s[b])}for i=1,e do s[(b+i)]=f[i]end d=s[(a+3)]do if d then s[b]=d else q=t;end;end end end else do if not(ba<31)then do if(ba<32)then s[bh]=s[t][p[z]];else do do return s[bh]end end end end else local a,b,d,e a=bh do b=((z-1)*50)end e=s[a]d=t for f=1,d do e[(b+f)]=s[(a+f)]end;end end end end end else if not(ba>10)then if not(ba>4)then do if not(ba>1)then if(ba<1)then local a,b a=bh do b={}end for d=1,#l do local e e=l[d]for d=0,#e do local f,i,k f=e[d]do i=f[1]end k=f[2]if(i==s and k>=a)then b[k]=i[k];f[1]=b;end;end;end;else do while(s[bh]>s[z])do q=t;break end end end else if not(be[141]>2)then if((s[bh]<s[z]))then q=t;end;else if 3==ba then s[bh]=(not s[t]);else if not s[bh]then q=t;end;end end end end else if not(be[141]<8)then do if not(be[141]>8)then c=be[bh];else if 9==be[141]then s[bh]=g[t];else local a,b,c b=bh do a=s[b]end do c=s[(b+2)]end do if((c>0))then do if((a>s[b+1]))then q=t;else s[(b+3)]=a;end end elseif((a<s[b+1]))then q=be[143];else s[(b+n)]=a;end end end end end else do if not(be[141]>5)then do s[bh]=(s[t]%p[z]);end else if(be[141]>6)then s[bh]=s[t][s[z]];else s[bh]=-s[t];end end end end end else if not(ba<16)then if not(ba>18)then if not(ba<17)then if(be[141]>17)then s[bh]=#s[t];else do if bh then bh=false;z=t;q=(q-1);else q=(q+t+z);end end end else local a,b,c c=bh b=s[(c+2)]a=(s[c]+b)s[c]=a;do if((b>0))then if(not(a>s[c+1]))then q=t;s[(c+3)]=a;end elseif(not(a<s[c+1]))then q=be[143];do s[(c+3)]=a;end end end end else do if not(ba<20)then if(ba>20)then for a=bh,t do s[a]=nil;end;else s[bh]=(s[t]%s[be[73]]);end else s[bh]=h[p[t]];end end end else do if not(ba<13)then if not(ba>13)then else if(be[141]>14)then local a,b b=bh do a=s[be[143]]end s[(b+1)]=a;s[b]=a[s[z]];else s={};for a=0,w do if(a<j)then s[a]=y[(a+1)];else break end;end;end end else if(ba>11)then do while(s[bh]~=s[z])do q=be[143];break end end else do bu[bh]=bu[bg]end end end end end end end end end q=(q+1);end;end;end else if bc<1551 then bc=1558 return bw(bt(cd()),{},cd())();else break end end end end end end end end)(1,80,2,68,1,nil,9,5,57,11,14,33,15,3,81,1,8,37,95,0,6,10,14,141,4,0,73)
