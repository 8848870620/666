
return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,v)local v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj=95,62,86,94,56,43,75,59,38,94,22,56,32,60,98,21,22,88,82,84,57,52,39,79,62,63,26,89,15,93,68,47,87,25,40,44,15,11,92,14,63,43,19,41,72,26,22,36,71,46,98 while v~=73 do if w>=834 then if w<=1100 then if w>=960 then if w<=1016 then if w<=960 then bc=function(v,ck,cl,cm,cm,cm)local cm,cn,co=65,48,49,36,11,62,19,92,86,89,86,90,25,49 while cm~=33 do if cn<=104 then if cn<=48 then co=nil cn=66 else if cn>74 then co=((ck/bd[v])%bd[cl])cn=120 else co=nil cn=104 end end else if cn>=161 then if cn<196 then cn=201 do return co end else cm=33;end else cn=161 do co=(co-co%1)end end end end end w=977 else if w>981 then w=1047 y=function(v,ck,cl,cm)local cm cm=((v/2^(ck-1))%2^((cl-1)-(ck-1)+1))return(cm-cm%1);end else cj=(bit_lib and bit_lib.bxor or function(v,ck)v=v%(2^32)ck=ck%(2^32)local cl,cm=0,1 while v>0 and ck>0 do local cn,co=v%16,ck%16 cl=cl+bf[cn+1][co+1]*cm v=(v-cn)/16 ck=(ck-co)/16 cm=cm*16 end cl=cl+v*cm+ck*cm return cl end)w=1016 end end else if w>=1083 then if w>1086 then w=1147 bp=function()local v v=br(bk,cb,cb)cb=(cb+1);return v;end else bg=function()local v,ck,cl,cm v,cm,ck,cl=br(bk,cb,(cb+3))cb=(cb+4);return((cl*16777216)+(ck*65536)+(cm*256)+v);end w=1100 end else cb=1 w=1083 end end else if w<=850 then if w<847 then ch=''w=850 else w=876 cf=(2^52)end else if w>=893 then if w>897 then w=960 for v=1,31 do bd[v]=be do be=(be*2)end end else w=936 do be=2 end end else bd={[h]=1}w=893 end end end else if w>=1335 then if w<=1410 then if w>=1374 then if w<1403 then ce={}w=1410 else do bv={}end w=1455 end else w=1374 do bo=function(h,v,v,v,v)local v,ck,cl,cm,cn,co,cp,cq=66,66,36,27,83,49,55,14,65,35,17,64,62,60,16,21,37,83,93,81,39,40,99,86 while v~=46 do if ck>=308 then if ck>=407 then if ck>=475 then if ck>=497 then if ck>503 then v=46;else ck=541 return cp;end else ck=497 cp[42]=cm end else if ck<429 then cm={}ck=438 else for v=1,cl do local cr,cs,ct,cu=86,44,11,91,26,61,71,55,60,62,66,73 while cr~=40 do if cs>=126 then if cs<=126 then cs=168 if(not(cu~=0))then ct=(0~=bp());elseif(not(cu~=3))then ct=bb();elseif(1==cu)then do ct=cd();end elseif(not(cu~=2))then do ct=h[cd()];end end;else if cs>170 then break else cs=210 do cm[v]=ct;end end end else if cs<=44 then ct,cu=nil cs=70 else if cs>79 then cs=126 do ct=nil end else cs=103 cu=bp()end end end end end ck=475 end end else if ck>=370 then if ck>373 then cl=bg()ck=407 else cp[197]=bp();ck=385 end else if ck<319 then ck=324 for h=1,bg()do co[h-1]=bo();end else ck=370 cp[29]=co;end end end else if ck>=198 then if ck<=230 then if ck>201 then for h=(#ci+1),(#ci+cq)do local v,cr,cs,ct,cu=57,50,89,97,11,48,39,55,98,57,62,80,37,33,85,72,78,23,31,35,21,21,28,18 while v~=42 do if cr>=362 then if cr>=485 then if cr>=536 then if cr<573 then cr=581 ci[h]=cu;else break end else if cr<496 then cr=505 cu[33]=-cu[113]else cu[36]=-cu[s]cr=536 end end else if cr>=427 then if cr>434 then cu[90]=y(cs,12,33);cr=485 else cr=454 cu[165]=y(ct,21,29);end else if cr<387 then cr=391 cu[113]=y(ct,3,11);else do cu[131]=y(ct,12,20);end cr=427 end end end else if cr<=168 then if cr>=121 then if cr<159 then do cu[115]=bp();end cr=168 else cr=195 ct=bg()end else if cr<94 then cr=99 cs,ct,cu=nil else do cu={}end cr=121 end end else if cr>=276 then if cr<309 then do cu[73]=y(ct,1,2);end cr=314 else cr=362 cu[184]=y(cs,1,11);end else if cr>201 then cr=276 do cu[129]=bp();end else cs=bg()cr=233 end end end end end end ck=253 else ck=230 do cq=bg()end end else if ck>255 then do cp[16]=cn;end ck=308 else do for h=1,bg()do local s,v,cr,cs,ct,cu=93,46,68,69,72,52,68,53,97,54,92,27,55,20,64,80,61,29,59,20,99,66,74,35,86,60 while s~=44 do if v>=352 then if v>=515 then if v>=557 then if v>=590 then if v>598 then s=44;else v=614 cn[h]=cr;end else v=590 cr[36]=-cr[165]end else if v>524 then v=557 cr[33]=-cr[113]else cr[129]=y(cs,12,20);v=540 end end else if v<=385 then if v>360 then v=425 cr[113]=y(cs,3,11);else v=385 cr[184]=y(ct,1,11);end else if v<462 then v=468 do cr[90]=y(ct,12,33);end else cr[165]=y(cs,21,29);v=515 end end end else if v<=141 then if v<=72 then if v>55 then v=115 do cr={{},nil,nil}end else cr,cs,ct,cu=nil v=72 end else if v<134 then do cr[115]=bp();end v=141 else v=188 cr[135]={};end end else if v<=213 then if v<211 then while bp()==1 do for h=1,bp()do cr[135][h]={bp()==0,bg()}end break end v=213 else v=247 cs=bg()end else if v<=247 then v=269 ct=bg()else if v>274 then v=352 do cr[73]=cu end else v=312 cu=y(cs,1,2)end end end end end end end end ck=285 end end else if ck<=91 then if ck>72 then ck=137 do cn={}end else cl,cm,cn,co,cp,cq=nil ck=91 end else if ck>139 then ck=198 do cp={}end else co={}ck=160 end end end end end end end end else if w<=1455 then w=1480 bm=function(h,s,v,ck,ck)local ck,cl,cm,cn,co cn=ce do cl=h[16]end co=h[n]do cm=h[197]end do ck=h[29]end return function(...)local h,n,cn,cp,cq,cr,cs,ct,cu n=1 cr=-1 do cp=-1 end cn={}cu={...}h=(ca('#',...)-f)do cq={}end cs={}do for f=0,h do do if(not(f<cm))then cn[(f-cm)]=cu[(f+1)];else cs[f]=cu[(f+1)];end;end end;end ct=(h-cm+1)while true do local f,cp,ct,cv,cw,cx,cy,cz,da,db do cx=cl[n]end do cy=cx[184]end cw=cx[115]do cz=cx[113]end cp=cx[131]db=cx[165]cv=cx[129]f=cx[33]ct=cx[90]da=cx[36]if not(cy<44)then if not(cx[184]>65)then if not(cy>54)then do if not(cx[m]>48)then do if not(cy>45)then do if not(cy~=44)then cl[n]=ci[cv];do n=cx[90];end else local m do m=cz end cs[m]=cs[m](cs[m+1]);end end else if not(cy<47)then if(cy>47)then if cx[113]then cz=false;db=ct;n=(n-1);else n=(n+ct+db);end else local m,cw,dc do cw=cx[113]end m=cs[cw]dc=cs[(cw+2)]if((dc>0))then if((m>cs[cw+1]))then n=ct;else cs[(cw+3)]=m;end elseif((m<cs[cw+1]))then do n=cx[90];end else cs[(cw+3)]=m;end end else do ce[cx[c]]={}end end end end else if not(cy<52)then if not(cy<53)then if not(cy~=53)then cs[cx[113]]=(cs[ct]%cs[db]);else local c do c=cx[113]end do return bw(cs,c,(c+ct))end;end else if((cs[cz]<cs[db]))then n=cx[90];end;end else if not(cy<50)then if(cy>50)then cr=cx[cz];else cs[cz]=(cs[cx[90]]+cs[db]);end else n=((co[cz]<cs[cx[165]])and ct or n)end end end end else if not(cy<60)then if not(cy>62)then if not(cy>60)then local c c=cz cs[c]=cs[c](bw(cs,c+1,ct));else if(cy>61)then local c,m,cw m=cz c={cs[m](cs[m+1])}cw=0 for dc=m,db do cw=(cw+1);do cs[dc]=c[cw];end end else local c,m,cw,dc cw=cz do dc=((db-1)*50)end m=cs[cw]do c=ct end for dd=1,c do m[(dc+dd)]=cs[(cw+dd)]end;end end else if not(cx[184]>63)then cs[cz]=ce[cp]else do if not(cx[184]~=64)then local c,m,cw,dc m=cz do cw,dc=ba(cs[m](bw(cs,(m+1),cx[90])))end cr=(dc+m-e)c=0 for e=m,cr do c=(c+1);cs[e]=cw[c];end;else local c,e,m c=cz do m=cs[c]end e=cx[90]for cw=1,e do m[cw]=cs[(c+cw)]end;end end end end else if not(cy<57)then if not(cy>j)then cs[cz]=(cs[cx[90]]/co[cx[165]]);else do if(cy>58)then local c c=cs[f][cv]cs[cx[33]][cv]=(c..cs[cx[165]]);else cs[da]=(function()cs[cz]=bm(ck[cp],nil,v);end)end end end else if(cx[184]<56)then n=((co[cx[113]]~=co[db])and ct or n)else cs[cz][cs[ct]]=cs[db];end end end end else if not(cy>76)then if not(cy<71)then if not(cy<74)then if not(cy>74)then v=cs[cx[cx[113]]]else if(cy<k)then while(cs[cz]>cs[db])do n=ct;break end else local c,e,j,k do c=cz end e={cs[c]()}do j=cx[165]end k=0 for m=c,j do k=(k+1);do cs[m]=e[k];end end end end else do if not(cy>71)then local c c=cz do do return cs[c](bw(cs,(c+1),ct))end;end else if(cy>72)then cs[da]();else local c c={}if(#cq>0)then do for e=1,#cq do local j j=cq[e]for e=0,#j do local k,m,cw m=j[e]k=m[1]cw=m[2]do if(k==cs and cw>=0)then do c[cw]=k[cw]end m[1]=c end end end end end end return 1,false;end end end end else if not(cy>67)then if(cy>66)then cs[cz]=bm(ck[ct],nil,v);else n=ct;end else if not(cy>68)then do cs[cz]=cs[ct][cs[cx[165]]];end else if 69==cy then if(not(cs[cz]==co[db]))then do n=ct;end end;else local c,e,j,k,m c=cz e=db k=(c+2)do j={cs[c](cs[c+1],cs[k])}end for ck=1,e do do cs[(k+ck)]=j[ck]end end m=cs[(c+3)]if m then cs[k]=m else n=ct;end;end end end end else if not(cy<83)then if not(cy<86)then if not(cy<87)then if(cy<88)then cs[cx[113]]=s[ct];else cs={};for c=0,h do if(c<cm)then cs[c]=cu[(c+1)];else break end;end;end else local c,e,h do e=cx[113]end c={cs[e](bw(cs,e+1,ct))}h=0 for j=e,cx[165]do h=(h+1);do cs[j]=c[h];end end end else if not(cy>83)then cs[cx[cx[113]]]=cs else do if 84==cy then cs[cz]=(cs[ct]%co[db]);else do if not cs[cz]then n=cx[90];end;end end end end end else if not(cy>79)then if not(cy>77)then co=ce[cz](co)else if not(cy~=78)then while(not cs[db])do cs[cz]=cs[cx[165]];n=ct;break end else cs[cz]=cs[ct][co[db]];end end else do if not(cy>80)then local c,e c=ct e=cs[c]for h=(c+1),db do e=(e..cs[h]);end;cs[cx[113]]=e;else if 81==cy then local c c=cz cs[c](bw(cs,(c+1),ct))else cs[cx[113]][co[ct]]=co[db];end end end end end end end else if not(cy<22)then if not(cx[184]<33)then do if not(cy>37)then do if not(cy<35)then do if not(cy>35)then do cs[cz]=(not cs[ct]);end else if 36==cy then local c,e,h c=cz do h=cs[(c+2)]end do e=(cs[c]+h)end do cs[c]=e;end if((h>0))then if(not(e>cs[c+1]))then n=ct;cs[(c+3)]=e;end elseif(not(e<cs[c+1]))then n=ct;cs[(c+3)]=e;end else cl[n]=ci[cv];n=ct;end end end else if 33==cy then cs[cz]();else v[co[cx[90]]]=cs[cz];end end end else do if not(cy<41)then if not(cy<42)then do if(cy<43)then do cs[cx[t]]=cs[ct]end else cs[cz]=#cs[ct];end end else local c,e c,e=ba(...)for e=1,cz do cs[(e-1)]=c[e]end end else if not(cy>38)then if(cs[db]~=cs[cz])then do n=ct;end end;else if(cy>39)then elseif cs[cz]then n=cx[90];end end end end end end else if not(cy>26)then do if not(cy>23)then if(cy>22)then cs[cz]=(cs[ct]*co[db]);else do cs[cz]={};end end else if not(cy>24)then cs[cx[113]]=v[co[ct]];else do if(cy<26)then cs[cz]=(cs[ct]+co[db]);else local c,e e=cz c=ct for h=e,c do cs[h]=cn[(h-e)];end;end end end end end else do if not(cy<30)then if not(cy>30)then cs[cz]=ce[cp]else do if not(cy~=31)then cs[cz]=cs[ct];else cs[cz]=-cs[ct];end end end else if not(cy>27)then do cs[cz]=nil;end else if(cy<29)then do s[ct]=cs[cz];end else if((co[cz]<cs[db]))then n=ct;end;end end end end end end else do if not(cx[184]>10)then if not(cx[184]<5)then if not(cy<8)then do if not(cy>8)then ce[cz]()else do if 9==cy then cs[cz]=(cs[cx[90]]-cs[db]);else ce=cs end end end end else if not(cy>5)then else if(cy<7)then cs[cz]=v[co[ct]][co[db]];else end end end else if not(cx[184]<2)then if not(cy>2)then for c=cx[113],ct do cs[c]=nil;end;else if 3==cy then cs[cx[113]]=co[ct]else do return cs[f][cv]end end end else if 0==cy then local c c=cz do cs[c]=cs[c](bw(cs,c+1,cr));end else cs[cx[113]]=(cs[ct]*cs[db]);end end end else do if not(cy>15)then if not(cy<13)then do if not(cy<14)then if(cy<15)then local c,e do c=cz end e={}do for f=1,#cq do local h h=cq[f]for f=0,#h do local j,k,m j=h[f]k=j[1]m=j[2]if(k==cs and m>=c)then e[m]=k[m];j[1]=e;end;end;end;end else local c,e e=cx[113]c=cs[ct]cs[(e+1)]=c;cs[e]=c[cs[db]];end else do cs[cz]=(cs[ct]/cs[db]);end end end else if(cy>11)then cs[cz]=(0~=ct);n=(n+1);else ce[cz]=cs[cp]end end else do if not(cy<19)then if not(cy>19)then ce[cx[113]]=ce[cp]else if(cy<21)then do do return cs[cz]end end else local c,e e=cz c=cs[cx[90]]cs[(e+1)]=c;cs[e]=c[co[cx[165]]];end end else if not(cx[184]>16)then if(not(cs[cz]<cs[db]))then n=ct;end;else do if 17==cy then cs[cz]=(cs[ct]^cs[db]);else local c,e do c=cz end do e={}end if(#cq>0)then for f=1,#cq do local h h=cq[f]for f=0,#h do local j,k,m j=h[f]do k=j[1]end m=j[2]if(k==cs and m>=0)then e[m]=k[m]do j[r]=e end end end end end do return bw(cs,c,cr);end end end end end end end end end end end end n=(n+1);end;end;end else if w>1485 then break else w=1516 return bm(bo(bz()),{},bz())();end end end else if w<=1183 then if w<1180 then w=1183 bq=function()local c,e c,e=br(bk,cb,(cb+2))cb=(cb+2);return((e*256)+c);end else bb=function()local c,e,f,h,j,k,m,n=73,40,55,35,12,85,96,32,66,24,64,31,65,90,35,79,59,98 while c~=43 do if e>=214 then if e>=293 then if e>=323 then if e<348 then e=352 return(h*(2^(m-1023))*(f/cf+k))else c=43;end else if not(m~=0)then if not(f==0)then m=1 k=0 else return(h*0)end elseif 2047~=m then else if not(f~=0)then do do return(h*(0/0))end end else return(h*(1/0))end end e=323 end else if e<=214 then m=bc(20,j,11)e=250 else if e>254 then do k=1 end e=293 else do f=(bc(0,j,20)*4294967296+n)end e=278 end end end else if e>=120 then if e>=136 then if e>142 then h=((-1)^bc(31,j,1))e=214 else while(n==0 and j==0)do return 0 end e=170 end else j=bg()e=136 end else if e<84 then e=86 f,h,j,k,m,n=nil else n=bg()e=120 end end end end end w=1222 end else if w>=1251 then if w<1285 then w=1294 ba=function(...)return{...},ca('#',...)end else w=1335 ci={}end else do cd=function(c,c,c,c)local c,e,f,h=76,62,53,61,95,41,94,96,58,15,62,28,27,62 while c~=38 do if e>=167 then if e<=167 then cb=(cb+f);e=184 else if e<228 then e=231 return h;else c=38;end end else if e>=79 then if e>81 then h=bk:sub(cb,(cb+f-1))e=167 else f=bg()e=127 end else e=79 f,h=nil end end end end end w=1251 end end end end else if w>=456 then if w<=624 then if w>=526 then if w<=526 then do by=(function(c,e)if not(bn(c)~='number')then return true else do return false end end end)end w=575 else if w>577 then w=660 bs=math.floor else z=math.abs w=624 end end else if w>462 then bn=type w=526 else do ca=select end w=491 end end else if w<=727 then if w>=689 then if w<720 then cg=tonumber w=727 else x={}w=750 end else do bw=(unpack or table.unpack)end w=689 end else if w<=750 then do for c=0,255 do do x[c]=bl(c);end end end w=769 else if w<807 then bk=ccp,function(c,e,e)return x[cg(c,16)]end)w=809 else w=834 bf={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,d,},{3,2,1,0,7,6,5,a,11,10,9,8,15,14,13,12,},{4,g,6,7,0,1,2,3,12,b,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,i,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,o,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,l,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,q,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,u,1,0,},nil,nil}end end end end else if w>=273 then if w>=355 then if w<=355 then w=383 bt=math.ldexp else if w<416 then do bz=(getfenv or function()return _ENV end)end w=422 else w=456 bu=setmetatable end end else if w<=273 then w=301 bx=string.rep else if w>310 then bj=table.insert w=355 else bi=table.concat w=330 end end end else if w<=100 then if w>66 then br=string.byte w=134 else x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj=nil w=100 end else if w<=134 then w=182 bl=string.char else if w<218 then w=226 do bh=string.sub end else do cc=string.gsub end w=273 end end end end end end end end)(4,13,113,13,1,1,5,0,0,57,76,14,184,42,14,'..',15,1,165,113,2)
